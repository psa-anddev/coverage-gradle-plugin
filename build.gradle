buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.6"
    }
}

group 'com.psa'
version '1.0'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "com.gradle.plugin-publish"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile group: 'net.sourceforge.cobertura', name: 'cobertura', version: '2.1.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2'
    testCompile gradleTestKit()
    testRuntime files("${buildDir}/createClasspathManifest")
    testRuntime "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.3"
    testRuntime "com.android.tools.build:gradle:2.2.0"
}

install {
    repositories.mavenInstaller {
        pom.version = project.version
        pom.artifactId = "coverage"
    }
}

pluginBundle {
    website = 'http://www.gradle.org/'
    vcsUrl = 'https://github.com/psa-anddev/coverage-gradle-plugin'
    description = 'Coverage plugin'
    tags = ['coverage', 'cobertura']

    plugins {
        coveragePlugin {
            id = 'com.psa.coverage'
            displayName = 'Coverage Plugin'
        }
    }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")
    println(outputDir)

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}
